{
    "name": "http",
    "displayName": "HTTP",
    "description": "A Pulumi package for creating and managing HTTP cloud resources.",
    "keywords": [
        "pulumi",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com/",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`http` Terraform Provider](https://github.com/terraform-providers/terraform-provider-http).",
    "repository": "https://github.com/pulumi/pulumi-http",
    "publisher": "Pulumi",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/pulumi/pulumi-http/sdk/go/http",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing HTTP cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-http)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-http` repo](https://github.com/pulumi/pulumi-http/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-http` repo](https://github.com/terraform-providers/terraform-provider-http/issues).",
            "devDependencies": {
                "@types/node": "^16.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/terraform-providers/terraform-provider-http)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-http` repo](https://github.com/pulumi/pulumi-http/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-http` repo](https://github.com/terraform-providers/terraform-provider-http/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {},
    "types": {
        "http:index/getHttpRetry:getHttpRetry": {
            "properties": {
                "attempts": {
                    "type": "integer",
                    "description": "The number of times the request is to be retried. For example, if 2 is specified, the request will be tried a maximum of 3 times.\n"
                },
                "maxDelayMs": {
                    "type": "integer",
                    "description": "The maximum delay between retry requests in milliseconds.\n"
                },
                "minDelayMs": {
                    "type": "integer",
                    "description": "The minimum delay between retry requests in milliseconds.\n"
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the http package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "methods": {
            "terraformConfig": "pulumi:providers:http/terraformConfig"
        }
    },
    "functions": {
        "http:index/getHttp:getHttp": {
            "inputs": {
                "description": "A collection of arguments for invoking getHttp.\n",
                "properties": {
                    "caCertPem": {
                        "type": "string",
                        "description": "Certificate Authority (CA) in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.\n"
                    },
                    "clientCertPem": {
                        "type": "string",
                        "description": "Client certificate in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.\n"
                    },
                    "clientKeyPem": {
                        "type": "string",
                        "description": "Client key in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.\n"
                    },
                    "insecure": {
                        "type": "boolean",
                        "description": "Disables verification of the server's certificate chain and hostname. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e\n"
                    },
                    "method": {
                        "type": "string",
                        "description": "The HTTP Method for the request. Allowed methods are a subset of methods defined in [RFC7231](https://datatracker.ietf.org/doc/html/rfc7231#section-4.3) namely, `GET`, `HEAD`, and `POST`. `POST` support is only intended for read-only URLs, such as submitting a search.\n"
                    },
                    "requestBody": {
                        "type": "string",
                        "description": "The request body as a string.\n"
                    },
                    "requestHeaders": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of request header field names and values.\n"
                    },
                    "requestTimeoutMs": {
                        "type": "integer",
                        "description": "The request timeout in milliseconds.\n"
                    },
                    "retry": {
                        "$ref": "#/types/http:index/getHttpRetry:getHttpRetry"
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL for the request. Supported schemes are \u003cspan pulumi-lang-nodejs=\"`http.getHttp`\" pulumi-lang-dotnet=\"`http.getHttp`\" pulumi-lang-go=\"`getHttp`\" pulumi-lang-python=\"`get_http`\" pulumi-lang-yaml=\"`http.getHttp`\" pulumi-lang-java=\"`http.getHttp`\"\u003e`http.getHttp`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`https`\" pulumi-lang-dotnet=\"`Https`\" pulumi-lang-go=\"`https`\" pulumi-lang-python=\"`https`\" pulumi-lang-yaml=\"`https`\" pulumi-lang-java=\"`https`\"\u003e`https`\u003c/span\u003e.\n"
                    }
                },
                "type": "object",
                "required": [
                    "url"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHttp.\n",
                "properties": {
                    "body": {
                        "deprecationMessage": "Use\u003cspan pulumi-lang-nodejs=\" responseBody \" pulumi-lang-dotnet=\" ResponseBody \" pulumi-lang-go=\" responseBody \" pulumi-lang-python=\" response_body \" pulumi-lang-yaml=\" responseBody \" pulumi-lang-java=\" responseBody \"\u003e response_body \u003c/span\u003einstead",
                        "description": "The response body returned as a string. **NOTE**: This is deprecated, use \u003cspan pulumi-lang-nodejs=\"`responseBody`\" pulumi-lang-dotnet=\"`ResponseBody`\" pulumi-lang-go=\"`responseBody`\" pulumi-lang-python=\"`response_body`\" pulumi-lang-yaml=\"`responseBody`\" pulumi-lang-java=\"`responseBody`\"\u003e`response_body`\u003c/span\u003e instead.\n",
                        "type": "string"
                    },
                    "caCertPem": {
                        "description": "Certificate Authority (CA) in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.\n",
                        "type": "string"
                    },
                    "clientCertPem": {
                        "description": "Client certificate in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.\n",
                        "type": "string"
                    },
                    "clientKeyPem": {
                        "description": "Client key in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The URL used for the request.\n",
                        "type": "string"
                    },
                    "insecure": {
                        "description": "Disables verification of the server's certificate chain and hostname. Defaults to \u003cspan pulumi-lang-nodejs=\"`false`\" pulumi-lang-dotnet=\"`False`\" pulumi-lang-go=\"`false`\" pulumi-lang-python=\"`false`\" pulumi-lang-yaml=\"`false`\" pulumi-lang-java=\"`false`\"\u003e`false`\u003c/span\u003e\n",
                        "type": "boolean"
                    },
                    "method": {
                        "description": "The HTTP Method for the request. Allowed methods are a subset of methods defined in [RFC7231](https://datatracker.ietf.org/doc/html/rfc7231#section-4.3) namely, `GET`, `HEAD`, and `POST`. `POST` support is only intended for read-only URLs, such as submitting a search.\n",
                        "type": "string"
                    },
                    "requestBody": {
                        "description": "The request body as a string.\n",
                        "type": "string"
                    },
                    "requestHeaders": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of request header field names and values.\n",
                        "type": "object"
                    },
                    "requestTimeoutMs": {
                        "description": "The request timeout in milliseconds.\n",
                        "type": "integer"
                    },
                    "responseBody": {
                        "description": "The response body returned as a string.\n",
                        "type": "string"
                    },
                    "responseBodyBase64": {
                        "description": "The response body encoded as base64 (standard) as defined in [RFC 4648](https://datatracker.ietf.org/doc/html/rfc4648#section-4).\n",
                        "type": "string"
                    },
                    "responseHeaders": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of response header field names and values. Duplicate headers are concatenated according to [RFC2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2).\n",
                        "type": "object"
                    },
                    "retry": {
                        "$ref": "#/types/http:index/getHttpRetry:getHttpRetry"
                    },
                    "statusCode": {
                        "description": "The HTTP response status code.\n",
                        "type": "integer"
                    },
                    "url": {
                        "description": "The URL for the request. Supported schemes are \u003cspan pulumi-lang-nodejs=\"`http.getHttp`\" pulumi-lang-dotnet=\"`http.getHttp`\" pulumi-lang-go=\"`getHttp`\" pulumi-lang-python=\"`get_http`\" pulumi-lang-yaml=\"`http.getHttp`\" pulumi-lang-java=\"`http.getHttp`\"\u003e`http.getHttp`\u003c/span\u003e and \u003cspan pulumi-lang-nodejs=\"`https`\" pulumi-lang-dotnet=\"`Https`\" pulumi-lang-go=\"`https`\" pulumi-lang-python=\"`https`\" pulumi-lang-yaml=\"`https`\" pulumi-lang-java=\"`https`\"\u003e`https`\u003c/span\u003e.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "body",
                    "id",
                    "responseBody",
                    "responseBodyBase64",
                    "responseHeaders",
                    "statusCode",
                    "url"
                ],
                "type": "object"
            }
        },
        "pulumi:providers:http/terraformConfig": {
            "description": "This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.",
            "inputs": {
                "properties": {
                    "__self__": {
                        "type": "ref",
                        "$ref": "#/provider"
                    }
                },
                "type": "pulumi:providers:http/terraformConfig",
                "required": [
                    "__self__"
                ]
            },
            "outputs": {
                "properties": {
                    "result": {
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "result"
                ],
                "type": "object"
            }
        }
    }
}