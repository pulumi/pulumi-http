// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getHttp(args: GetHttpArgs, opts?: pulumi.InvokeOptions): Promise<GetHttpResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("http:index/getHttp:getHttp", {
        "caCertPem": args.caCertPem,
        "insecure": args.insecure,
        "method": args.method,
        "requestBody": args.requestBody,
        "requestHeaders": args.requestHeaders,
        "requestTimeoutMs": args.requestTimeoutMs,
        "retry": args.retry,
        "url": args.url,
    }, opts);
}

/**
 * A collection of arguments for invoking getHttp.
 */
export interface GetHttpArgs {
    /**
     * Certificate data of the Certificate Authority (CA) in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.
     */
    caCertPem?: string;
    /**
     * Disables verification of the server's certificate chain and hostname. Defaults to `false`
     */
    insecure?: boolean;
    /**
     * The HTTP Method for the request. Allowed methods are a subset of methods defined in [RFC7231](https://datatracker.ietf.org/doc/html/rfc7231#section-4.3) namely, `GET`, `HEAD`, and `POST`. `POST` support is only intended for read-only URLs, such as submitting a search.
     */
    method?: string;
    /**
     * The request body as a string.
     */
    requestBody?: string;
    /**
     * A map of request header field names and values.
     */
    requestHeaders?: {[key: string]: string};
    /**
     * The request timeout in milliseconds.
     */
    requestTimeoutMs?: number;
    retry?: inputs.GetHttpRetry;
    /**
     * The URL for the request. Supported schemes are `http.getHttp` and `https`.
     */
    url: string;
}

/**
 * A collection of values returned by getHttp.
 */
export interface GetHttpResult {
    /**
     * The response body returned as a string. **NOTE**: This is deprecated, use `responseBody` instead.
     *
     * @deprecated Use responseBody instead
     */
    readonly body: string;
    /**
     * Certificate data of the Certificate Authority (CA) in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.
     */
    readonly caCertPem?: string;
    /**
     * The URL used for the request.
     */
    readonly id: string;
    /**
     * Disables verification of the server's certificate chain and hostname. Defaults to `false`
     */
    readonly insecure?: boolean;
    /**
     * The HTTP Method for the request. Allowed methods are a subset of methods defined in [RFC7231](https://datatracker.ietf.org/doc/html/rfc7231#section-4.3) namely, `GET`, `HEAD`, and `POST`. `POST` support is only intended for read-only URLs, such as submitting a search.
     */
    readonly method?: string;
    /**
     * The request body as a string.
     */
    readonly requestBody?: string;
    /**
     * A map of request header field names and values.
     */
    readonly requestHeaders?: {[key: string]: string};
    /**
     * The request timeout in milliseconds.
     */
    readonly requestTimeoutMs?: number;
    /**
     * The response body returned as a string.
     */
    readonly responseBody: string;
    /**
     * The response body encoded as base64 (standard) as defined in [RFC 4648](https://datatracker.ietf.org/doc/html/rfc4648#section-4).
     */
    readonly responseBodyBase64: string;
    /**
     * A map of response header field names and values. Duplicate headers are concatenated according to [RFC2616](https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2).
     */
    readonly responseHeaders: {[key: string]: string};
    readonly retry?: outputs.GetHttpRetry;
    /**
     * The HTTP response status code.
     */
    readonly statusCode: number;
    /**
     * The URL for the request. Supported schemes are `http.getHttp` and `https`.
     */
    readonly url: string;
}
export function getHttpOutput(args: GetHttpOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetHttpResult> {
    return pulumi.output(args).apply((a: any) => getHttp(a, opts))
}

/**
 * A collection of arguments for invoking getHttp.
 */
export interface GetHttpOutputArgs {
    /**
     * Certificate data of the Certificate Authority (CA) in [PEM (RFC 1421)](https://datatracker.ietf.org/doc/html/rfc1421) format.
     */
    caCertPem?: pulumi.Input<string>;
    /**
     * Disables verification of the server's certificate chain and hostname. Defaults to `false`
     */
    insecure?: pulumi.Input<boolean>;
    /**
     * The HTTP Method for the request. Allowed methods are a subset of methods defined in [RFC7231](https://datatracker.ietf.org/doc/html/rfc7231#section-4.3) namely, `GET`, `HEAD`, and `POST`. `POST` support is only intended for read-only URLs, such as submitting a search.
     */
    method?: pulumi.Input<string>;
    /**
     * The request body as a string.
     */
    requestBody?: pulumi.Input<string>;
    /**
     * A map of request header field names and values.
     */
    requestHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The request timeout in milliseconds.
     */
    requestTimeoutMs?: pulumi.Input<number>;
    retry?: pulumi.Input<inputs.GetHttpRetryArgs>;
    /**
     * The URL for the request. Supported schemes are `http.getHttp` and `https`.
     */
    url: pulumi.Input<string>;
}
