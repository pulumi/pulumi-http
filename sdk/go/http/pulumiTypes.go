// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package http

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetHttpRetry struct {
	// The number of times the request is to be retried. For example, if 2 is specified, the request will be tried a maximum of 3 times.
	Attempts *int `pulumi:"attempts"`
	// The maximum delay between retry requests in milliseconds.
	MaxDelayMs *int `pulumi:"maxDelayMs"`
	// The minimum delay between retry requests in milliseconds.
	MinDelayMs *int `pulumi:"minDelayMs"`
}

// GetHttpRetryInput is an input type that accepts GetHttpRetryArgs and GetHttpRetryOutput values.
// You can construct a concrete instance of `GetHttpRetryInput` via:
//
//	GetHttpRetryArgs{...}
type GetHttpRetryInput interface {
	pulumi.Input

	ToGetHttpRetryOutput() GetHttpRetryOutput
	ToGetHttpRetryOutputWithContext(context.Context) GetHttpRetryOutput
}

type GetHttpRetryArgs struct {
	// The number of times the request is to be retried. For example, if 2 is specified, the request will be tried a maximum of 3 times.
	Attempts pulumi.IntPtrInput `pulumi:"attempts"`
	// The maximum delay between retry requests in milliseconds.
	MaxDelayMs pulumi.IntPtrInput `pulumi:"maxDelayMs"`
	// The minimum delay between retry requests in milliseconds.
	MinDelayMs pulumi.IntPtrInput `pulumi:"minDelayMs"`
}

func (GetHttpRetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpRetry)(nil)).Elem()
}

func (i GetHttpRetryArgs) ToGetHttpRetryOutput() GetHttpRetryOutput {
	return i.ToGetHttpRetryOutputWithContext(context.Background())
}

func (i GetHttpRetryArgs) ToGetHttpRetryOutputWithContext(ctx context.Context) GetHttpRetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpRetryOutput)
}

func (i GetHttpRetryArgs) ToGetHttpRetryPtrOutput() GetHttpRetryPtrOutput {
	return i.ToGetHttpRetryPtrOutputWithContext(context.Background())
}

func (i GetHttpRetryArgs) ToGetHttpRetryPtrOutputWithContext(ctx context.Context) GetHttpRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpRetryOutput).ToGetHttpRetryPtrOutputWithContext(ctx)
}

// GetHttpRetryPtrInput is an input type that accepts GetHttpRetryArgs, GetHttpRetryPtr and GetHttpRetryPtrOutput values.
// You can construct a concrete instance of `GetHttpRetryPtrInput` via:
//
//	        GetHttpRetryArgs{...}
//
//	or:
//
//	        nil
type GetHttpRetryPtrInput interface {
	pulumi.Input

	ToGetHttpRetryPtrOutput() GetHttpRetryPtrOutput
	ToGetHttpRetryPtrOutputWithContext(context.Context) GetHttpRetryPtrOutput
}

type getHttpRetryPtrType GetHttpRetryArgs

func GetHttpRetryPtr(v *GetHttpRetryArgs) GetHttpRetryPtrInput {
	return (*getHttpRetryPtrType)(v)
}

func (*getHttpRetryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetHttpRetry)(nil)).Elem()
}

func (i *getHttpRetryPtrType) ToGetHttpRetryPtrOutput() GetHttpRetryPtrOutput {
	return i.ToGetHttpRetryPtrOutputWithContext(context.Background())
}

func (i *getHttpRetryPtrType) ToGetHttpRetryPtrOutputWithContext(ctx context.Context) GetHttpRetryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetHttpRetryPtrOutput)
}

type GetHttpRetryOutput struct{ *pulumi.OutputState }

func (GetHttpRetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpRetry)(nil)).Elem()
}

func (o GetHttpRetryOutput) ToGetHttpRetryOutput() GetHttpRetryOutput {
	return o
}

func (o GetHttpRetryOutput) ToGetHttpRetryOutputWithContext(ctx context.Context) GetHttpRetryOutput {
	return o
}

func (o GetHttpRetryOutput) ToGetHttpRetryPtrOutput() GetHttpRetryPtrOutput {
	return o.ToGetHttpRetryPtrOutputWithContext(context.Background())
}

func (o GetHttpRetryOutput) ToGetHttpRetryPtrOutputWithContext(ctx context.Context) GetHttpRetryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetHttpRetry) *GetHttpRetry {
		return &v
	}).(GetHttpRetryPtrOutput)
}

// The number of times the request is to be retried. For example, if 2 is specified, the request will be tried a maximum of 3 times.
func (o GetHttpRetryOutput) Attempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetHttpRetry) *int { return v.Attempts }).(pulumi.IntPtrOutput)
}

// The maximum delay between retry requests in milliseconds.
func (o GetHttpRetryOutput) MaxDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetHttpRetry) *int { return v.MaxDelayMs }).(pulumi.IntPtrOutput)
}

// The minimum delay between retry requests in milliseconds.
func (o GetHttpRetryOutput) MinDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetHttpRetry) *int { return v.MinDelayMs }).(pulumi.IntPtrOutput)
}

type GetHttpRetryPtrOutput struct{ *pulumi.OutputState }

func (GetHttpRetryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetHttpRetry)(nil)).Elem()
}

func (o GetHttpRetryPtrOutput) ToGetHttpRetryPtrOutput() GetHttpRetryPtrOutput {
	return o
}

func (o GetHttpRetryPtrOutput) ToGetHttpRetryPtrOutputWithContext(ctx context.Context) GetHttpRetryPtrOutput {
	return o
}

func (o GetHttpRetryPtrOutput) Elem() GetHttpRetryOutput {
	return o.ApplyT(func(v *GetHttpRetry) GetHttpRetry {
		if v != nil {
			return *v
		}
		var ret GetHttpRetry
		return ret
	}).(GetHttpRetryOutput)
}

// The number of times the request is to be retried. For example, if 2 is specified, the request will be tried a maximum of 3 times.
func (o GetHttpRetryPtrOutput) Attempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetHttpRetry) *int {
		if v == nil {
			return nil
		}
		return v.Attempts
	}).(pulumi.IntPtrOutput)
}

// The maximum delay between retry requests in milliseconds.
func (o GetHttpRetryPtrOutput) MaxDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetHttpRetry) *int {
		if v == nil {
			return nil
		}
		return v.MaxDelayMs
	}).(pulumi.IntPtrOutput)
}

// The minimum delay between retry requests in milliseconds.
func (o GetHttpRetryPtrOutput) MinDelayMs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetHttpRetry) *int {
		if v == nil {
			return nil
		}
		return v.MinDelayMs
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpRetryInput)(nil)).Elem(), GetHttpRetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetHttpRetryPtrInput)(nil)).Elem(), GetHttpRetryArgs{})
	pulumi.RegisterOutputType(GetHttpRetryOutput{})
	pulumi.RegisterOutputType(GetHttpRetryPtrOutput{})
}
