// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.http;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.http.Utilities;
import com.pulumi.http.inputs.GetHttpArgs;
import com.pulumi.http.inputs.GetHttpPlainArgs;
import com.pulumi.http.outputs.GetHttpResult;
import java.util.concurrent.CompletableFuture;

public final class HttpFunctions {
    public static Output<GetHttpResult> getHttp(GetHttpArgs args) {
        return getHttp(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetHttpResult> getHttpPlain(GetHttpPlainArgs args) {
        return getHttpPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetHttpResult> getHttp(GetHttpArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("http:index/getHttp:getHttp", TypeShape.of(GetHttpResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetHttpResult> getHttp(GetHttpArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("http:index/getHttp:getHttp", TypeShape.of(GetHttpResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetHttpResult> getHttpPlain(GetHttpPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("http:index/getHttp:getHttp", TypeShape.of(GetHttpResult.class), args, Utilities.withVersion(options));
    }
}
