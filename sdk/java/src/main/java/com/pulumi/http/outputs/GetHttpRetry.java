// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.http.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetHttpRetry {
    /**
     * @return The number of times the request is to be retried. For example, if 2 is specified, the request will be tried a maximum of 3 times.
     * 
     */
    private @Nullable Integer attempts;
    /**
     * @return The maximum delay between retry requests in milliseconds.
     * 
     */
    private @Nullable Integer maxDelayMs;
    /**
     * @return The minimum delay between retry requests in milliseconds.
     * 
     */
    private @Nullable Integer minDelayMs;

    private GetHttpRetry() {}
    /**
     * @return The number of times the request is to be retried. For example, if 2 is specified, the request will be tried a maximum of 3 times.
     * 
     */
    public Optional<Integer> attempts() {
        return Optional.ofNullable(this.attempts);
    }
    /**
     * @return The maximum delay between retry requests in milliseconds.
     * 
     */
    public Optional<Integer> maxDelayMs() {
        return Optional.ofNullable(this.maxDelayMs);
    }
    /**
     * @return The minimum delay between retry requests in milliseconds.
     * 
     */
    public Optional<Integer> minDelayMs() {
        return Optional.ofNullable(this.minDelayMs);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHttpRetry defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer attempts;
        private @Nullable Integer maxDelayMs;
        private @Nullable Integer minDelayMs;
        public Builder() {}
        public Builder(GetHttpRetry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attempts = defaults.attempts;
    	      this.maxDelayMs = defaults.maxDelayMs;
    	      this.minDelayMs = defaults.minDelayMs;
        }

        @CustomType.Setter
        public Builder attempts(@Nullable Integer attempts) {

            this.attempts = attempts;
            return this;
        }
        @CustomType.Setter
        public Builder maxDelayMs(@Nullable Integer maxDelayMs) {

            this.maxDelayMs = maxDelayMs;
            return this;
        }
        @CustomType.Setter
        public Builder minDelayMs(@Nullable Integer minDelayMs) {

            this.minDelayMs = minDelayMs;
            return this;
        }
        public GetHttpRetry build() {
            final var _resultValue = new GetHttpRetry();
            _resultValue.attempts = attempts;
            _resultValue.maxDelayMs = maxDelayMs;
            _resultValue.minDelayMs = minDelayMs;
            return _resultValue;
        }
    }
}
